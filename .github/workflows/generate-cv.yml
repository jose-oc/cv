
# GitHub Actions Workflow: Generate CV from Markdown to PDF using Pandoc

name: Generate CV PDF

# Controls when the action will run.
on:
  push:
    branches:
      - master
    paths:
      - 'cv.md'
  workflow_dispatch:


jobs:
  build-pdf:
    # The type of runner that the job will run on.
    runs-on: ubuntu-latest

    permissions:
      contents: write  # required for creating releases and uploading assets

    steps:
      # This action checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
      - name: Checkout repository
        uses: actions/checkout@v5

      # Convert Markdown to PDF using the pandoc/extra Docker image.
      # This image is 'batteries-included' and contains the Eisvogel template and a full LaTeX engine.
      # This removes the need for a separate template download step.
      # --volume: Mounts the current directory (containing cv.md) into the container.
      # --user: Ensures the output file is owned by the runner user, preventing permission issues.
      - name: Convert Markdown to PDF
        run: |
          docker run --rm \
            --volume "$(pwd):/data" \
            --user "$(id -u):$(id -g)" \
            pandoc/extra:latest \
            cv.md -o "cv-Jose-Ortiz.pdf" --from markdown --template=eisvogel

      # Upload the generated PDF as a workflow artifact.
      # This action uploads files from your workflow, allowing you to share data between jobs
      # and store results once a workflow is complete.
      - name: Upload PDF artifact
        uses: actions/upload-artifact@v4
        with:
          # The name of the artifact to be uploaded.
          name: CV-Jose-Ortiz
          # The path to the file to upload.
          path: cv-Jose-Ortiz.pdf


      - name: Create or update 'latest' release with date
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          DATE=$(date -u +"%Y-%m-%d %H:%M UTC")

          if gh release view latest >/dev/null 2>&1; then
            echo "Release 'latest' exists â€” deleting old asset..."
            gh release delete-asset latest cv-Jose-Ortiz.pdf -y >/dev/null 2>&1 || true
            gh release edit latest --title "Latest CV" --notes "Last updated: ${DATE}"
          else
            echo "Creating new 'latest' release..."
            gh release create latest \
              --title "Latest CV" \
              --notes "Last updated: ${DATE}"
          fi

          echo "Uploading new PDF..."
          gh release upload latest cv-Jose-Ortiz.pdf --clobber
